exports[`Connected GameForm should match the snapshot 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }>
  <ReduxForm>
    <Connect(Form(GameForm))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="gameForm"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      touchOnBlur={true}
      touchOnChange={false}>
      <Form(GameForm)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="gameForm"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "p1OnGoal": Object {
              "count": 1,
              "name": "p1OnGoal",
              "type": "Field",
            },
            "p1PassAcc": Object {
              "count": 1,
              "name": "p1PassAcc",
              "type": "Field",
            },
            "p1Poss": Object {
              "count": 1,
              "name": "p1Poss",
              "type": "Field",
            },
            "p1Reds": Object {
              "count": 1,
              "name": "p1Reds",
              "type": "Field",
            },
            "p1Score": Object {
              "count": 1,
              "name": "p1Score",
              "type": "Field",
            },
            "p1Shots": Object {
              "count": 1,
              "name": "p1Shots",
              "type": "Field",
            },
            "p1Yellows": Object {
              "count": 1,
              "name": "p1Yellows",
              "type": "Field",
            },
            "p2OnGoal": Object {
              "count": 1,
              "name": "p2OnGoal",
              "type": "Field",
            },
            "p2PassAcc": Object {
              "count": 1,
              "name": "p2PassAcc",
              "type": "Field",
            },
            "p2Poss": Object {
              "count": 1,
              "name": "p2Poss",
              "type": "Field",
            },
            "p2Reds": Object {
              "count": 1,
              "name": "p2Reds",
              "type": "Field",
            },
            "p2Score": Object {
              "count": 1,
              "name": "p2Score",
              "type": "Field",
            },
            "p2Shots": Object {
              "count": 1,
              "name": "p2Shots",
              "type": "Field",
            },
            "p2Yellows": Object {
              "count": 1,
              "name": "p2Yellows",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "p1Poss": "Possession is required.",
            "p1Score": "Required",
            "p2Poss": "Possession is required.",
            "p2Score": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        values={Object {}}>
        <GameForm
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="gameForm"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}>
          <form
            onSubmit={[Function]}>
            <Row
              bsClass="row"
              className="game-field"
              componentClass="div">
              <div
                className="game-field row">
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}>
                  <div
                    className="col-xs-3">
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}>
                      <label
                        className="control-label">
                        Score
                      </label>
                    </ControlLabel>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p1Score"
                      normalize={[Function]}
                      validate={[Function]}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p1Score"
                        normalize={[Function]}
                        validate={[Function]}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p1Score"
                          normalize={[Function]}
                          pristine={true}
                          syncError="Required"
                          validate={[Function]}>
                          <gameField
                            input={
                              Object {
                                "name": "p1Score",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": "Required",
                                "form": "gameForm",
                                "invalid": true,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": false,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p1Score"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p1Score"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p2Score"
                      normalize={[Function]}
                      validate={[Function]}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p2Score"
                        normalize={[Function]}
                        validate={[Function]}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p2Score"
                          normalize={[Function]}
                          pristine={true}
                          syncError="Required"
                          validate={[Function]}>
                          <gameField
                            input={
                              Object {
                                "name": "p2Score",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": "Required",
                                "form": "gameForm",
                                "invalid": true,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": false,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p2Score"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p2Score"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}>
                  <div
                    className="col-xs-5">
                    <HelpBlock
                      bsClass="help-block">
                      <span
                        className="help-block">
                        Score is required! I mean.. come on!
                      </span>
                    </HelpBlock>
                  </div>
                </Col>
              </div>
            </Row>
            <Row
              bsClass="row"
              className="game-field"
              componentClass="div">
              <div
                className="game-field row">
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}>
                  <div
                    className="col-xs-3">
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}>
                      <label
                        className="control-label">
                        Shots
                      </label>
                    </ControlLabel>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p1Shots"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p1Shots"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p1Shots"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p1Shots",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p1Shots"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p1Shots"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p2Shots"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p2Shots"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p2Shots"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p2Shots",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p2Shots"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p2Shots"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}>
                  <div
                    className="col-xs-5">
                    <HelpBlock
                      bsClass="help-block">
                      <span
                        className="help-block">
                        Shots will default to 0 if not given.
                      </span>
                    </HelpBlock>
                  </div>
                </Col>
              </div>
            </Row>
            <Row
              bsClass="row"
              className="game-field"
              componentClass="div">
              <div
                className="game-field row">
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}>
                  <div
                    className="col-xs-3">
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}>
                      <label
                        className="control-label">
                        OnGoal
                      </label>
                    </ControlLabel>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p1OnGoal"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p1OnGoal"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p1OnGoal"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p1OnGoal",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p1OnGoal"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p1OnGoal"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p2OnGoal"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p2OnGoal"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p2OnGoal"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p2OnGoal",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p2OnGoal"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p2OnGoal"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}>
                  <div
                    className="col-xs-5">
                    <HelpBlock
                      bsClass="help-block">
                      <span
                        className="help-block">
                        OnGoal will default to 0 if not given.
                      </span>
                    </HelpBlock>
                  </div>
                </Col>
              </div>
            </Row>
            <Row
              bsClass="row"
              className="game-field"
              componentClass="div">
              <div
                className="game-field row">
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}>
                  <div
                    className="col-xs-3">
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}>
                      <label
                        className="control-label">
                        Reds
                      </label>
                    </ControlLabel>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p1Reds"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p1Reds"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p1Reds"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p1Reds",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p1Reds"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p1Reds"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p2Reds"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p2Reds"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p2Reds"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p2Reds",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p2Reds"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p2Reds"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}>
                  <div
                    className="col-xs-5">
                    <HelpBlock
                      bsClass="help-block">
                      <span
                        className="help-block">
                        Reds will default to 0 if not given.
                      </span>
                    </HelpBlock>
                  </div>
                </Col>
              </div>
            </Row>
            <Row
              bsClass="row"
              className="game-field"
              componentClass="div">
              <div
                className="game-field row">
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}>
                  <div
                    className="col-xs-3">
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}>
                      <label
                        className="control-label">
                        Yellows
                      </label>
                    </ControlLabel>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p1Yellows"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p1Yellows"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p1Yellows"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p1Yellows",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p1Yellows"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p1Yellows"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={2}>
                  <div
                    className="col-xs-2">
                    <Field
                      component={[Function]}
                      name="p2Yellows"
                      normalize={[Function]}
                      validate={null}>
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "gameForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        name="p2Yellows"
                        normalize={[Function]}
                        validate={null}>
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "gameForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          name="p2Yellows"
                          normalize={[Function]}
                          pristine={true}
                          validate={null}>
                          <gameField
                            input={
                              Object {
                                "name": "p2Yellows",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "gameForm",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }>
                            <FormGroup
                              bsClass="form-group"
                              validationState={null}>
                              <div
                                className="form-group">
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="select"
                                  name="p2Yellows"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="">
                                  <select
                                    className="form-control"
                                    name="p2Yellows"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value="">
                                    <option
                                      value={0}>
                                      0
                                    </option>
                                    <option
                                      value={1}>
                                      1
                                    </option>
                                    <option
                                      value={2}>
                                      2
                                    </option>
                                    <option
                                      value={3}>
                                      3
                                    </option>
                                    <option
                                      value={4}>
                                      4
                                    </option>
                                    <option
                                      value={5}>
                                      5
                                    </option>
                                    <option
                                      value={6}>
                                      6
                                    </option>
                                    <option
                                      value={7}>
                                      7
                                    </option>
                                    <option
                                      value={8}>
                                      8
                                    </option>
                                    <option
                                      value={9}>
                                      9
                                    </option>
                                    <option
                                      value={10}>
                                      10
                                    </option>
                                    <option
                                      value={11}>
                                      11
                                    </option>
                                    <option
                                      value={12}>
                                      12
                                    </option>
                                    <option
                                      value={13}>
                                      13
                                    </option>
                                    <option
                                      value={14}>
                                      14
                                    </option>
                                    <option
                                      value={15}>
                                      15
                                    </option>
                                    <option
                                      value={16}>
                                      16
                                    </option>
                                    <option
                                      value={17}>
                                      17
                                    </option>
                                    <option
                                      value={18}>
                                      18
                                    </option>
                                    <option
                                      value={19}>
                                      19
                                    </option>
                                    <option
                                      value={20}>
                                      20
                                    </option>
                                  </select>
                                </FormControl>
                              </div>
                            </FormGroup>
                          </gameField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}>
                  <div
                    className="col-xs-5">
                    <HelpBlock
                      bsClass="help-block">
                      <span
                        className="help-block">
                        Yellows will default to 0 if not given.
                      </span>
                    </HelpBlock>
                  </div>
                </Col>
              </div>
            </Row>
            <Connect(Percentage)
              label="Possession"
              name="Poss">
              <Percentage
                dispatch={[Function]}
                errors={
                  Object {
                    "p1Poss": "Possession is required.",
                    "p1Score": "Required",
                    "p2Poss": "Possession is required.",
                    "p2Score": "Required",
                  }
                }
                label="Possession"
                name="Poss">
                <Row
                  bsClass="row"
                  className="game-field"
                  componentClass="div">
                  <div
                    className="game-field row">
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={3}>
                      <div
                        className="col-xs-3">
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}>
                          <label
                            className="control-label">
                            Possession
                          </label>
                        </ControlLabel>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={2}>
                      <div
                        className="col-xs-2">
                        <Field
                          component={[Function]}
                          name="p1Poss"
                          normalize={[Function]}
                          type="text"
                          validate={[Function]}>
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "gameForm",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": false,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": undefined,
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldValidate": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {},
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": true,
                                "validExceptSubmit": true,
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            name="p1Poss"
                            normalize={[Function]}
                            type="text"
                            validate={[Function]}>
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "gameForm",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": false,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": undefined,
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldValidate": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {},
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": true,
                                  "validExceptSubmit": true,
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              name="p1Poss"
                              normalize={[Function]}
                              pristine={true}
                              syncError="Possession is required."
                              type="text"
                              validate={[Function]}>
                              <PercentageField
                                input={
                                  Object {
                                    "name": "p1Poss",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Possession is required.",
                                    "form": "gameForm",
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                type="text">
                                <FormGroup
                                  bsClass="form-group"
                                  validationState={null}>
                                  <div
                                    className="form-group">
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      name="p1Poss"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder="00"
                                      type="text"
                                      value="">
                                      <input
                                        className="form-control"
                                        name="p1Poss"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        placeholder="00"
                                        type="text"
                                        value="" />
                                    </FormControl>
                                  </div>
                                </FormGroup>
                              </PercentageField>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={2}>
                      <div
                        className="col-xs-2">
                        <Field
                          component={[Function]}
                          name="p2Poss"
                          normalize={[Function]}
                          type="text"
                          validate={[Function]}>
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "gameForm",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": false,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": undefined,
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldValidate": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {},
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": true,
                                "validExceptSubmit": true,
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            name="p2Poss"
                            normalize={[Function]}
                            type="text"
                            validate={[Function]}>
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "gameForm",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": false,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": undefined,
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldValidate": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {},
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": true,
                                  "validExceptSubmit": true,
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              name="p2Poss"
                              normalize={[Function]}
                              pristine={true}
                              syncError="Possession is required."
                              type="text"
                              validate={[Function]}>
                              <PercentageField
                                input={
                                  Object {
                                    "name": "p2Poss",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Possession is required.",
                                    "form": "gameForm",
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                type="text">
                                <FormGroup
                                  bsClass="form-group"
                                  validationState={null}>
                                  <div
                                    className="form-group">
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      name="p2Poss"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder="00"
                                      type="text"
                                      value="">
                                      <input
                                        className="form-control"
                                        name="p2Poss"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        placeholder="00"
                                        type="text"
                                        value="" />
                                    </FormControl>
                                  </div>
                                </FormGroup>
                              </PercentageField>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={5}>
                      <div
                        className="col-xs-5">
                        <HelpBlock
                          bsClass="help-block">
                          <span
                            className="help-block">
                            Possession is required.
                          </span>
                        </HelpBlock>
                      </div>
                    </Col>
                  </div>
                </Row>
              </Percentage>
            </Connect(Percentage)>
            <Connect(Percentage)
              label="Passing Accuracy"
              name="PassAcc">
              <Percentage
                dispatch={[Function]}
                errors={
                  Object {
                    "p1Poss": "Possession is required.",
                    "p1Score": "Required",
                    "p2Poss": "Possession is required.",
                    "p2Score": "Required",
                  }
                }
                label="Passing Accuracy"
                name="PassAcc">
                <Row
                  bsClass="row"
                  className="game-field"
                  componentClass="div">
                  <div
                    className="game-field row">
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={3}>
                      <div
                        className="col-xs-3">
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}>
                          <label
                            className="control-label">
                            Passing Accuracy
                          </label>
                        </ControlLabel>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={2}>
                      <div
                        className="col-xs-2">
                        <Field
                          component={[Function]}
                          name="p1PassAcc"
                          normalize={[Function]}
                          type="text"
                          validate={[Function]}>
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "gameForm",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": false,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": undefined,
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldValidate": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {},
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": true,
                                "validExceptSubmit": true,
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            name="p1PassAcc"
                            normalize={[Function]}
                            type="text"
                            validate={[Function]}>
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "gameForm",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": false,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": undefined,
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldValidate": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {},
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": true,
                                  "validExceptSubmit": true,
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              name="p1PassAcc"
                              normalize={[Function]}
                              pristine={true}
                              type="text"
                              validate={[Function]}>
                              <PercentageField
                                input={
                                  Object {
                                    "name": "p1PassAcc",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": undefined,
                                    "form": "gameForm",
                                    "invalid": false,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": true,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                type="text">
                                <FormGroup
                                  bsClass="form-group"
                                  validationState={null}>
                                  <div
                                    className="form-group">
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      name="p1PassAcc"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder="00"
                                      type="text"
                                      value="">
                                      <input
                                        className="form-control"
                                        name="p1PassAcc"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        placeholder="00"
                                        type="text"
                                        value="" />
                                    </FormControl>
                                  </div>
                                </FormGroup>
                              </PercentageField>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={2}>
                      <div
                        className="col-xs-2">
                        <Field
                          component={[Function]}
                          name="p2PassAcc"
                          normalize={[Function]}
                          type="text"
                          validate={[Function]}>
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "gameForm",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": false,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": undefined,
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldValidate": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {},
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": true,
                                "validExceptSubmit": true,
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            name="p2PassAcc"
                            normalize={[Function]}
                            type="text"
                            validate={[Function]}>
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "gameForm",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": false,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": undefined,
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldValidate": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {},
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": true,
                                  "validExceptSubmit": true,
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              name="p2PassAcc"
                              normalize={[Function]}
                              pristine={true}
                              type="text"
                              validate={[Function]}>
                              <PercentageField
                                input={
                                  Object {
                                    "name": "p2PassAcc",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": undefined,
                                    "form": "gameForm",
                                    "invalid": false,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": true,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                type="text">
                                <FormGroup
                                  bsClass="form-group"
                                  validationState={null}>
                                  <div
                                    className="form-group">
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      name="p2PassAcc"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder="00"
                                      type="text"
                                      value="">
                                      <input
                                        className="form-control"
                                        name="p2PassAcc"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        placeholder="00"
                                        type="text"
                                        value="" />
                                    </FormControl>
                                  </div>
                                </FormGroup>
                              </PercentageField>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      xs={5}>
                      <div
                        className="col-xs-5">
                        <HelpBlock
                          bsClass="help-block">
                          <span
                            className="help-block" />
                        </HelpBlock>
                      </div>
                    </Col>
                  </div>
                </Row>
              </Percentage>
            </Connect(Percentage)>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={true}
              type="submit">
              <button
                className="btn btn-default"
                disabled={true}
                type="submit">
                Finish this game!
              </button>
            </Button>
          </form>
        </GameForm>
      </Form(GameForm)>
    </Connect(Form(GameForm))>
  </ReduxForm>
</Provider>
`;

exports[`Shallow Percentage component should show a HelpBlock with an error message if there is an error for PassAcc 1`] = `
<Row
  bsClass="row"
  className="game-field"
  componentClass="div">
  <Col
    bsClass="col"
    componentClass="div"
    xs={3}>
    <ControlLabel
      bsClass="control-label"
      srOnly={false}>
      Passing Accuracy
    </ControlLabel>
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p1PassAcc"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p2PassAcc"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={5}>
    <HelpBlock
      bsClass="help-block" />
  </Col>
</Row>
`;

exports[`Shallow Percentage component should show a HelpBlock with an error message if there is an error for PassAcc 2`] = `
<Row
  bsClass="row"
  className="game-field"
  componentClass="div">
  <Col
    bsClass="col"
    componentClass="div"
    xs={3}>
    <ControlLabel
      bsClass="control-label"
      srOnly={false}>
      Passing Accuracy
    </ControlLabel>
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p1PassAcc"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p2PassAcc"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={5}>
    <HelpBlock
      bsClass="help-block">
      This should be a valid Percentage
    </HelpBlock>
  </Col>
</Row>
`;

exports[`Shallow Percentage component should show a HelpBlock with an error message if there is an error for Poss 1`] = `
<Row
  bsClass="row"
  className="game-field"
  componentClass="div">
  <Col
    bsClass="col"
    componentClass="div"
    xs={3}>
    <ControlLabel
      bsClass="control-label"
      srOnly={false}>
      Percentage
    </ControlLabel>
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p1Poss"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p2Poss"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={5}>
    <HelpBlock
      bsClass="help-block" />
  </Col>
</Row>
`;

exports[`Shallow Percentage component should show a HelpBlock with an error message if there is an error for Poss 2`] = `
<Row
  bsClass="row"
  className="game-field"
  componentClass="div">
  <Col
    bsClass="col"
    componentClass="div"
    xs={3}>
    <ControlLabel
      bsClass="control-label"
      srOnly={false}>
      Percentage
    </ControlLabel>
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p1Poss"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={2}>
    <Field
      component={[Function]}
      name="p2Poss"
      normalize={[Function]}
      type="text"
      validate={[Function]} />
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={5}>
    <HelpBlock
      bsClass="help-block">
      Possession should add up to 100%
    </HelpBlock>
  </Col>
</Row>
`;
